{"version":3,"sources":["firebase/Firebase.js","components/login/Login.js","components/menu/Menu.js","components/buttons/Buttons.js","components/navbar/Navbar.js","components/input/Input.js","components/card/Card.js","components/order/Order.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Login","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","setState","defineProperty","target","name","value","login","preventDefault","auth","signInWithEmailAndPassword","state","email","password","then","user","console","log","catch","error","document","body","style","backgroundImage","react_default","a","createElement","Redirect","to","className","type","onChange","aria-describedby","placeholder","onClick","Component","Menu","props","menu","map","element","i","key","keys","values","Buttons","breakfast","breakfastMenu","bm","Data","desayuno","x","price","newObj","push","meal","mealMenu","mealMN","comida","priceMeal","newObjectMeal","menu_Menu","Navbar","Input","callback","aria-label","saveCustomer","id","protoTypes","PropTypes","func","Card","data","Order","inputCustomer","customer","navbar_Navbar","input_Input","buttons_Buttons","card_Card","App","BrowserRouter","basename","process","Switch","Route","path","component","exact","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.06c6ea9f.chunk.js","sourcesContent":["import firebase from 'firebase';\n\nconst config = {\n  apiKey: \"AIzaSyAPTOHrZlBeSv2hfP2Kk3eFezRXTshQ74Y\",\n  authDomain: \"burger-queen-72c04.firebaseapp.com\",\n  databaseURL: \"https://burger-queen-72c04.firebaseio.com\",\n  projectId: \"burger-queen-72c04\",\n  storageBucket: \"burger-queen-72c04.appspot.com\",\n  messagingSenderId: \"169607877333\"\n  };\n\nfirebase.initializeApp(config);\n\nexport default firebase;\n\n","import React, {Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport firebase from '../../firebase/Firebase';\nimport './login.css';\n\nclass Login extends Component {\n  constructor () {\n    super ();\n    this.state = {\n      email: '',\n      password: '',\n      user: null\n    }\n  }\n  \n  handleChange = (e) => {\n    this.setState({[e.target.name]:e.target.value});\n  }\n\n  login = (e) => {\n    e.preventDefault();\n    firebase.auth().signInWithEmailAndPassword(this.state.email, this.state.password).then((user) => {\n      console.log(user);\n      this.setState ({user});\n    })\n    .catch((error) => {\n      console.log(error);\n    })\n  }\n\n  componentDidMount(){\n    \n    document.body.style.backgroundImage = 'url(\"../../assets/hamburger-576419_1280.png\") no-repeat center -120%';      \n    //document.body.style.backgroundColor = '#FD907B'; // Set the style\n  }\n\n  render () {\n    if (this.state.user) {\n      return (\n        <Redirect to = '/order' />\n      )\n    } else {\n      return ( \n      <div className=\"body-login\">\n        <header className=\"container title\">\n          <h1>Burger Queen</h1>\n        </header>\n        <form className =\"container form-login\">\n          <div className=\"form-group\">\n            <input type=\"email\" className=\"form-control\" name=\"email\" onChange={this.handleChange} aria-describedby=\"emailHelp\" placeholder=\"Email\"/>\n          </div>\n          <div className=\"form-group\">\n            <input type=\"password\" className=\"form-control\" name=\"password\" onChange={this.handleChange} placeholder=\"Password\"/>\n          </div>\n          <button type=\"submit\" onClick={this.login} className=\"btn btn-primary\">Iniciar sesi√≥n</button>\n        </form>\n      </div>  \n      )\n    }\n  }\n}\n\nexport default Login;","import React from 'react';\n\nconst Menu = (props) => {\n  //console.log(props); \n  return(\n<div>\n  {props.menu.map((element,i) => {\n    return (\n      <div key={i} className=\"container mt-3\">\n        <div>\n          <button type=\"button\" className=\"btn btn-primary btn-lg btn-style\">{Object.keys(element)} : {Object.values(element)}</button>\n        </div>\n      </div>\n    );\n  })}\n</div>    \n  )\n}\n      \nexport default Menu;","import React, {Component} from 'react';\nimport './buttons.css';\nimport Data from '../data/Menu.json';\nimport Menu from '../menu/Menu';\n\nclass Buttons extends Component {\n  constructor (props) {\n    super (props);\n    this.state = {\n      menu : []\n    }\n  }\n  \n  breakfast = () => {\n    const breakfastMenu = [];\n    // console.log(breakfastMenu);\n    const bm = Data.desayuno;\n    for(const x in bm) {\n      const price = bm[x];\n        const newObj = {\n        [x] : price\n      }\n      breakfastMenu.push(newObj);\n    }\n    this.setState({menu : breakfastMenu});\n  }\n  \n  meal = () => {\n    const mealMenu = [];\n    // console.log(mealMenu);\n    const mealMN = Data.comida;\n    for (const x in mealMN){\n      const priceMeal = mealMN[x];\n      const newObjectMeal = {\n        [x] : priceMeal\n      }\n      mealMenu.push(newObjectMeal);\n    }\n    this.setState({menu : mealMenu})\n  }\n\n  render () {\n    return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-md-12 div-btn\">\n          <button type=\"button\" onClick={this.breakfast} name=\"desayuno\" className=\"btn btn btn-outline-primary btn-lg\">Desayuno</button>\n          <button type=\"button\" onClick={this.meal} name=\"comida\" className=\"btn btn-outline-primary btn-lg\">Comida</button>\n          <Menu menu={this.state.menu}/>\n        </div>\n      </div>\n    </div>\n    )\n  }\n}\n\n\n\n\nexport default Buttons;","import React from 'react';\nimport './navbar.css';\n\nconst Navbar = () =>\n  <nav className=\"navbar\">\n    <span className=\"navbar-brand mb-0 h1\">Burger Queen</span>\n  </nav>\n\nexport default Navbar;","import React, {Component}from 'react';\nimport PropTypes from 'prop-types';\n\nclass Input extends Component {\n\n  handleChange = (e) => {\n    this.props.callback(e.target.value);\n  }\n  \n  // saveCustomer = (e, handleChange) => {\n  //   this.props.callback(this.handleChange());\n  // }\n\n  render () {\n    return (\n    <div className=\"input-group mb-3 mt-3\">\n      <input type=\"text\" className=\"form-control\" name=\"costumer\" onChange={this.handleChange} placeholder=\"Nombre del cliente\" aria-label=\"Nombre del cliente\" aria-describedby=\"button-addon2\"/>\n      <div className=\"input-group-append\">\n        <button className=\"btn btn-secondary btn-sm\" type=\"button\" onClick={this.saveCustomer} id=\"button-addon2\">Guardar</button>\n      </div>\n    </div>\n    )\n  }\n}\n\nInput.protoTypes = {\n  callback: PropTypes.func,\n}\n\n\nexport default Input;","import React, {Component} from 'react';\nimport './card.css';\n\nclass Card extends Component {\n  // console.log(props.data)\n  render () {\n      return (\n      <div className=\"card bg-light mb-3 p-3\">\n      <div className=\"card-header\"> Cliente: {this.props.data} </div>\n      <div className=\"card-body\">\n        <h6 className=\"card-title\">Total:</h6>\n        <button type=\"button\" className=\"btn btn-primary\">Enviar a cocina</button>\n      </div>\n      </div>\n      )\n    }\n}\n\nexport default Card;","import React, {Component} from 'react';\nimport Buttons from '../buttons/Buttons';\nimport './order.css';\nimport Navbar from '../navbar/Navbar';\nimport Input from '../input/Input';\nimport Card from '../card/Card';\n\nclass Order extends Component {\n  constructor () {\n    super();\n    this.state = {\n      data : \"\"\n    }\n  }\n\n  inputCustomer = (customer) => { // callback function para comunicaci√≥n entre hermanos\n    this.setState({\n      data : customer\n    })\n  }\n\n  // toSave = (e, customer) => {\n  //   if (e === true) {\n  //     this.setState({\n  //       data : customer\n  //     })\n  //   }\n  // }\n\n  render (){\n    return (\n      <div>\n        <Navbar/>\n        <div className=\"container\">\n        <Input callback={this.inputCustomer}/>\n        <div className=\"row\">\n        <div className=\"col-6\">\n          <Buttons/>\n        </div>\n          <aside className=\"col-6\">\n            <Card data={this.state.data}/>\n          </aside>\n        </div>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default Order;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Login from './components/login/Login';\nimport Order from './components/order/Order';\n\nconst App = () => (<Router basename = {process.env.PUBLIC_URL}>\n  <div>\n    <Switch>\n      <Route\n        path = '/'\n        component = {Login} exact\n      />\n\n      <Route\n        path = '/order'\n        component = {Order}\n      />\n\n    </Switch>\n  </div>\n</Router>)\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}